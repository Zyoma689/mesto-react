{"version":3,"sources":["images/header_logo.svg","components/Header.js","utils/Api.js","components/Card.js","contexts/CurrentUserContext.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","api","options","this","baseUrl","headers","fetch","then","res","_getResponse","name","about","method","body","JSON","stringify","link","card","data","avatar","ok","json","Promise","reject","status","authorization","Card","props","type","aria-label","onClick","onCardClick","likes","length","CurrentUserContext","React","createContext","Main","useState","cards","setCards","currentUser","useContext","useEffect","getInitialCards","onEditAvatar","onEditProfile","onAddPlace","map","_id","Footer","PopupWithForm","isOpen","onClose","title","noValidate","children","buttonText","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCurrentUser","closeAllPopups","handleEscClose","evt","key","handleOverlayClose","target","classList","contains","getUserData","catch","err","console","log","document","addEventListener","removeEventListener","Provider","value","id","placeholder","minLength","maxLength","required","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f1e8c6c2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header_logo.8724261e.svg\";","import React from 'react';\r\nimport logo from '../images/header_logo.svg';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header className=\"header page__header\">\r\n            <img className=\"header__logo\" src={logo} alt=\"Лого Mesto\" />\r\n        </header>\r\n    );\r\n}","class Api {\r\n    constructor(options) {\r\n        this.baseUrl = options.baseUrl;\r\n        this.headers = options.headers;\r\n    }\r\n\r\n    getUserData() {\r\n        return fetch(`${this.baseUrl}/users/me`, {\r\n            headers: this.headers\r\n        })\r\n            .then(res => this._getResponse(res))\r\n    }\r\n\r\n    getInitialCards() {\r\n        return fetch (`${this.baseUrl}/cards`, {\r\n            headers: this.headers\r\n        })\r\n            .then(res => this._getResponse(res))\r\n    }\r\n\r\n    editUserData({ name, about }) {\r\n        return fetch(`${this.baseUrl}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: name,\r\n                about: about\r\n            })\r\n        })\r\n            .then(res => this._getResponse(res))\r\n    }\r\n\r\n    postNewCard({ name, link }) {\r\n        return fetch(`${this.baseUrl}/cards `, {\r\n            method: 'POST',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: name,\r\n                link: link\r\n            })\r\n        })\r\n            .then(res => this._getResponse(res))\r\n    }\r\n\r\n    deleteCard(card) {\r\n        return fetch(`${this.baseUrl}/cards/${card['_id']}`, {\r\n            method: 'DELETE',\r\n            headers: this.headers,\r\n        })\r\n            .then(res => this._getResponse(res))\r\n    }\r\n\r\n    addLike(card) {\r\n        return fetch(`${this.baseUrl}/cards/likes/${card['cardId']} `, {\r\n            method: 'PUT',\r\n            headers: this.headers\r\n        })\r\n            .then(res => this._getResponse(res))\r\n    }\r\n\r\n    removeLike(card) {\r\n        return fetch(`${this.baseUrl}/cards/likes/${card['cardId']}`, {\r\n            method: 'DELETE',\r\n            headers: this.headers\r\n        })\r\n            .then(res => this._getResponse(res))\r\n    }\r\n\r\n    changeUserAvatar(data) {\r\n        return fetch(`${this.baseUrl}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                avatar: data.avatar\r\n            })\r\n        })\r\n            .then(res => this._getResponse(res))\r\n    }\r\n\r\n    _getResponse(res) {\r\n        if (res.ok) {\r\n            return(res.json());\r\n        }\r\n\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-19',\r\n    headers: {\r\n        authorization: 'ee997593-23fa-4bcc-b338-c6e6a2cbbaea',\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nexport default api","import React from 'react';\r\n\r\nexport default function Card(props) {\r\n    function handleCardClick() {\r\n        props.onCardClick(props.card);\r\n    }\r\n\r\n    return (\r\n        <li\r\n            className=\"card\">\r\n            <button\r\n                className=\"card__delete-button\"\r\n            />\r\n            <button\r\n                className=\"card__open-photo-button\"\r\n                type=\"button\"\r\n                aria-label=\"Открыть\"\r\n                onClick={handleCardClick}>\r\n                <img\r\n                    className=\"card__photo\"\r\n                    src={props.link}\r\n                    alt={props.name}\r\n                />\r\n            </button>\r\n            <div\r\n                className=\"card__description\">\r\n                <h2\r\n                    className=\"card__title\">{props.name}\r\n                </h2>\r\n                <div\r\n                    className=\"card__like-container\">\r\n                    <button\r\n                        className=\"card__like-button\"\r\n                        type=\"button\"\r\n                        aria-label=\"Нравится\"/>\r\n                    <p\r\n                        className=\"card__like-counter\">{props.likes.length}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    );\r\n}","import React from \"react\"\r\nexport const CurrentUserContext = React.createContext();","import React from \"react\";\r\nimport api from \"../utils/Api.js\";\r\nimport Card from \"./Card.js\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\r\n\r\n\r\nexport default function Main(props) {\r\n    const [ cards, setCards ] = React.useState([]);\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    React.useEffect(() => {\r\n        api.getInitialCards()\r\n            .then((data) => {\r\n                setCards(data);\r\n            })\r\n    }, []);\r\n\r\n    return (\r\n        <main className=\"content page__content\">\r\n            <section className=\"profile content__profile\">\r\n                <button\r\n                    className=\"profile__avatar-button\"\r\n                    type=\"button\"\r\n                    onClick={props.onEditAvatar}>\r\n                    <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"аватар\" />\r\n                </button>\r\n                <div className=\"profile__info\">\r\n                    <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n                    <p className=\"profile__about\">{currentUser.about}</p>\r\n                    <button\r\n                        className=\"profile__edit-button\"\r\n                        type=\"button\"\r\n                        aria-label=\"Редактировать\"\r\n                        onClick={props.onEditProfile}\r\n                    />\r\n                </div>\r\n                <button\r\n                    className=\"profile__add-button\"\r\n                    type=\"button\"\r\n                    aria-label=\"Добавить\"\r\n                    onClick={props.onAddPlace}\r\n                />\r\n            </section>\r\n\r\n            <section className=\"cards content__cards\">\r\n                <ul className=\"cards__list\">\r\n                    {\r\n                        cards.map((card) => (\r\n                            <Card\r\n                                key={card._id}\r\n                                card={card}\r\n                                name={card.name}\r\n                                link={card.link}\r\n                                likes={card.likes}\r\n                                onCardClick={props.onCardClick}\r\n                            />\r\n                            )\r\n                        )\r\n                    }\r\n\r\n                </ul>\r\n            </section>\r\n        </main>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer className=\"footer page__footer\">\r\n            <p className=\"footer__copyright\">&copy; 2021 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function PopupWithForm(props) {\r\n    return (\r\n        <div\r\n            className={`popup page__popup popup_type_${props.name} ${props.isOpen && \"popup_opened\"}`}>\r\n            <div\r\n                className=\"popup__container\">\r\n                <button\r\n                    className=\"popup__close-button\"\r\n                    type=\"button\"\r\n                    aria-label=\"Закрыть\"\r\n                    onClick={props.onClose}\r\n                />\r\n                <h2 className=\"popup__title\">{props.title}</h2>\r\n                <form\r\n                    className=\"popup__form\"\r\n                    name={props.name}\r\n                    noValidate>\r\n                    {props.children}\r\n                    <button\r\n                        className=\"popup__save-button\"\r\n                        type=\"submit\">{props.buttonText}\r\n                    </button>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function ImagePopup(props) {\r\n    return (\r\n        <div\r\n            className={`popup page__popup popup_type_view-image ${props.card.link && \"popup_opened\"}`}>\r\n            <figure\r\n                className=\"popup__image-container\">\r\n                <button\r\n                    className=\"popup__close-button popup__close-button_type_view-image\"\r\n                    type=\"button\"\r\n                    aria-label=\"Закрыть\"\r\n                    onClick={props.onClose}\r\n                />\r\n                <img\r\n                    className=\"popup__image\"\r\n                    src={props.card.link}\r\n                    alt={props.card.name}\r\n                />\r\n                <figcaption\r\n                    className=\"popup__image-title\">{props.card.name} </figcaption>\r\n            </figure>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Header from \"./Header.js\";\r\nimport Main from \"./Main.js\";\r\nimport Footer from \"./Footer.js\";\r\nimport PopupWithForm from \"./PopupWithForm.js\";\r\nimport ImagePopup from \"./ImagePopup.js\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\r\nimport api from \"../utils/Api.js\";\r\n\r\nfunction App() {\r\n    const [ isEditProfilePopupOpen, setIsEditProfilePopupOpen ] = React.useState(false);\r\n    const [ isAddPlacePopupOpen, setIsAddPlacePopupOpen ] = React.useState(false);\r\n    const [ isEditAvatarPopupOpen, setIsEditAvatarPopupOpen ] = React.useState(false);\r\n    const [ selectedCard, setSelectedCard ] = React.useState({});\r\n    const [ currentUser, setCurrentUser] = React.useState({});\r\n\r\n    React.useEffect(() => {\r\n        api.getUserData()\r\n            .then((data) => {\r\n                setCurrentUser(data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            });\r\n    }, []);\r\n\r\n    function handleEditAvatarClick() {\r\n        setIsEditAvatarPopupOpen(true);\r\n    }\r\n\r\n    function handleEditProfileClick() {\r\n        setIsEditProfilePopupOpen(true);\r\n    }\r\n\r\n    function handleAddPlaceClick() {\r\n        setIsAddPlacePopupOpen(true);\r\n    }\r\n    \r\n    function closeAllPopups() {\r\n        setIsEditProfilePopupOpen(false);\r\n        setIsAddPlacePopupOpen(false);\r\n        setIsEditAvatarPopupOpen(false);\r\n        setSelectedCard({})\r\n    }\r\n\r\n    function handleEscClose(evt) {\r\n        if (evt.key === 'Escape') {\r\n            closeAllPopups();\r\n        }\r\n    }\r\n    \r\n    function handleOverlayClose(evt) {\r\n        if (evt.target.classList.contains('popup')) {\r\n            closeAllPopups();\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        document.addEventListener('keydown', handleEscClose);\r\n        document.addEventListener('mouseup', handleOverlayClose);\r\n        return () => {\r\n            document.removeEventListener('keydown', handleEscClose);\r\n            document.removeEventListener('mouseup', handleOverlayClose);\r\n        }\r\n    });\r\n\r\n  return (\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n          <div className=\"page\">\r\n              <div className=\"page__container\">\r\n                  <Header/>\r\n                  <Main\r\n                      onEditProfile={handleEditProfileClick}\r\n                      onAddPlace={handleAddPlaceClick}\r\n                      onEditAvatar={handleEditAvatarClick}\r\n                      onCardClick={setSelectedCard}\r\n                  />\r\n                  <Footer/>\r\n\r\n                  <PopupWithForm\r\n                      name=\"edit-profile\"\r\n                      title=\"Редактировать профиль\"\r\n                      buttonText=\"Сохранить\"\r\n                      isOpen={isEditProfilePopupOpen}\r\n                      onClose={closeAllPopups}\r\n                      children={\r\n                          <>\r\n                              <input\r\n                                  className=\"popup__input popup__input_type_name\"\r\n                                  id=\"name-input\"\r\n                                  type=\"text\"\r\n                                  name=\"nameInput\"\r\n                                  placeholder=\"Имя\"\r\n                                  minLength=\"2\"\r\n                                  maxLength=\"40\"\r\n                                  required\r\n                              />\r\n                              <span\r\n                                  className=\"popup__input-error\"\r\n                                  id=\"name-input-error\"\r\n                              />\r\n                              <input\r\n                                  className=\"popup__input popup__input_type_about\"\r\n                                  id=\"about-input\"\r\n                                  type=\"text\"\r\n                                  name=\"aboutInput\"\r\n                                  placeholder=\"О себе\"\r\n                                  minLength=\"2\"\r\n                                  maxLength=\"200\"\r\n                                  required\r\n                              />\r\n                              <span\r\n                                  className=\"popup__input-error\"\r\n                                  id=\"about-input-error\"\r\n                              />\r\n                          </>\r\n                      }\r\n                  />\r\n                  <PopupWithForm\r\n                      name=\"add-card\"\r\n                      title=\"Новое место\"\r\n                      buttonText=\"Создать\"\r\n                      isOpen={isAddPlacePopupOpen}\r\n                      onClose={closeAllPopups}\r\n                      children={\r\n                          <>\r\n                              <input\r\n                                  className=\"popup__input popup__input_type_place\"\r\n                                  id=\"place-input\"\r\n                                  type=\"text\"\r\n                                  name=\"placeInput\"\r\n                                  placeholder=\"Название\"\r\n                                  minLength=\"2\"\r\n                                  maxLength=\"30\"\r\n                                  required\r\n                              />\r\n                              <span\r\n                                  className=\"popup__input-error\"\r\n                                  id=\"place-input-error\"\r\n                              />\r\n                              <input\r\n                                  className=\"popup__input popup__input_type_link\"\r\n                                  id=\"link-input\"\r\n                                  type=\"url\"\r\n                                  name=\"linkInput\"\r\n                                  placeholder=\"Ссылка на картинку\"\r\n                                  required\r\n                              />\r\n                              <span\r\n                                  className=\"popup__input-error\"\r\n                                  id=\"link-input-error\"\r\n                              />\r\n                          </>\r\n                      }\r\n                  />\r\n\r\n                  <PopupWithForm\r\n                      name=\"change-avatar\"\r\n                      title=\"Обновить аватар\"\r\n                      buttonText=\"Сохранить\"\r\n                      isOpen={isEditAvatarPopupOpen}\r\n                      onClose={closeAllPopups}\r\n                      children={\r\n                          <>\r\n                              <input\r\n                                  className=\"popup__input popup__input_type_link\"\r\n                                  id=\"avatar-link-input\"\r\n                                  type=\"url\"\r\n                                  name=\"avatarLinkInput\"\r\n                                  placeholder=\"Ссылка на картинку\"\r\n                                  required\r\n                              />\r\n                              <span\r\n                                  className=\"popup__input-error\"\r\n                                  id=\"avatar-link-input-error\"\r\n                              />\r\n                          </>\r\n                      }\r\n                  />\r\n\r\n                  <PopupWithForm\r\n                      name=\"confirm\"\r\n                      title=\"Вы уверены?\"\r\n                      buttonText=\"Да\"\r\n                  />\r\n\r\n                  <ImagePopup\r\n                      card={selectedCard}\r\n                      onClose={closeAllPopups}\r\n                  />\r\n              </div>\r\n          </div>\r\n      </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}